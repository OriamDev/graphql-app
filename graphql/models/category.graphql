type Category
{
    id: ID!
    name: String!,
    slug: String!
    status: Int!
    products: [Product!] @hasMany(type: PAGINATOR)
}

extend type Query
{
    categories: [Category!]! @paginate(defaultCount: 3)
    category(
        id: ID @eq @rules(apply: ["prohibits:slug", "required_without:slug"])
        slug: String @eq @rules(apply: ["prohibits:id", "required_without:id"])
    ): Category @find
}

extend type Mutation
{
    createCategory(input: CategoryInput! @spread): Category @create
    updateCategory(input: CategoryUpdateInput! @spread): Category @update
    deleteCategory(id: ID!): Category @delete
}

input CategoryInput
{
    name: String! @rules(apply: ["string", "unique:categories,name"])
    status: Int @rules(apply: ["int", "min:0", "max:1"])
}

input CategoryUpdateInput @validator
{
    id: ID!
    name: String
    status: Int
}
